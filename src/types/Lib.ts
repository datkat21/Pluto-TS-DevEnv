import {
  CoreDetails,
  CoreIcons,
  CoreLanguages,
  Process,
  TrayInfo,
  loadLibraryOrComponent,
  randomString,
} from "./Core";
import { Html, HtmlConstructor } from "./Html";
import { Package, PackageReturns } from "./Package";
import { AutoGeneratedStrings } from "./_autoGenerated";

export type GetStringFunction = {
  (str: AutoGeneratedStrings, replacements?: object): string;
  (str: string, replacements?: object): string;
};

export interface ProcessAvailableLibrary {
  getString: GetStringFunction;
  html: HtmlConstructor;
  randomString: randomString;
  icons: Record<CoreIcons, string>;
  systemInfo: CoreDetails;
  loadLibrary: loadLibraryOrComponent;
  loadComponent: loadLibraryOrComponent;
  updateProcTitle: (newTitle: string) => void;
  updateProcDesc: (newDescription: string) => void;
  langs: CoreLanguages;
  launch: (
    app: string,
    parent?: Html | HTMLElement | Element
  ) => Promise<Package> | Promise<false>;
  getProcessList: () => {
    name: string;
    pid: number;
  }[];
  cleanup: (pid: number, token: string) => boolean;
  setOnEnd: (onEndCallback: CallableFunction) => void;
  setupReturns: (
    onMessage: (message: any) => any,
    trayInfo?: TrayInfo
  ) => PackageReturns;
  onEnd: () => void;
}
